dnl Process this file with autoconf to produce a configure script.
dnl
dnl  Copyright (C) 1998, 2002 Free Software Foundation, Inc.
dnl
dnl  This file is part of GUILE-PG
dnl
dnl  GUILE-PG is free software; you can redistribute it and/or modify it
dnl  under the terms of the GNU General Public License as published by
dnl  the Free Software Foundation; either version 2, or (at your
dnl  option) any later version.
dnl
dnl  GUILE-PG is distributed in the hope that it will be useful, but
dnl  WITHOUT ANY WARRANTY; without even the implied warranty of
dnl  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl  General Public License for more details.
dnl
dnl  You should have received a copy of the GNU General Public License
dnl  along with GUILE-PG; see the file COPYING.  If not, write to the
dnl  Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl  Boston, MA 02111-1307, USA.

AC_INIT(libpostgres.c)
AM_INIT_AUTOMAKE(guile-pg, 0.10)
AM_CONFIG_HEADER(config.h)

AM_PROG_LIBTOOL

AC_PROG_CC

AC_STDC_HEADERS

AC_HAVE_HEADERS(string.h stdio.h stdlib.h malloc.h unistd.h)

##----------------------------------------------------------------------------
## Guile

GUILE_PROGS
GUILE_FLAGS

saved_CFLAGS="$CFLAGS"                  # restoration below
CFLAGS="$CFLAGS $GUILE_CFLAGS"

AC_CACHE_CHECK([for fill_input in struct scm_ptob_descriptor],
               [ac_cv_struct_fill_input],[
  AC_TRY_COMPILE([#include <libguile.h>],
                 [struct scm_ptob_descriptor s; s.fill_input;],
                 [ac_cv_struct_fill_input=yes],
                 [ac_cv_struct_fill_input=no])
])
if test $ac_cv_struct_fill_input = no; then
  AC_MSG_ERROR([guile struct scm_ptob_descriptor lacks member fill_input])
fi

CFLAGS="$saved_CFLAGS"

##----------------------------------------------------------------------------
## PostgreSQL

## This little hack allows the tests for libpq etc. to be overridden by
## setting the environment variables PQ_CFLAGS and PQ_LDFLAGS.  This is
## useful e.g. when running 'Make distcheck', which runs ./configure.

if test "x$PQ_LDFLAGS" = "x" -a "x$PQ_CFLAGS" = "x" ; then
PQ_FLAGS
fi

saved_CFLAGS="$CFLAGS"                  # restoration below
saved_LDFLAGS="$LDFLAGS"
CFLAGS="$PQ_CFLAGS $CFLAGS"
LDFLAGS="$PQ_LDFLAGS $LDFLAGS"

AC_CHECK_LIB(pq, PQconnectdb, ,[
  AC_MSG_NOTICE(CFLAGS: $CFLAGS)
  AC_MSG_NOTICE(LDFLAGS: $LDFLAGS)
  AC_MSG_ERROR([cannot find libpq on the system])
])
AC_CHECK_FUNCS(PQfmod PQbinaryTuples PQbackendPID               dnl
               PQresultErrorMessage PQpass PQputnbytes          dnl
               PQoidValue)

AC_CHECK_DECL([InvalidOid],,
              [pg_ac_need_invalidoid=true],
              [[#include "libpq-fe.h"]])

if test x"$pg_ac_need_invalidoid" = xtrue ; then
  AC_CHECK_DECL([InvalidOid],[
    pg_ac_need_invalidoid=false
    AC_DEFINE(INVALIDOID_HEADER, ["postgresql/postgres.h"],
              [Header that declares InvalidOid if not libpq-fe.h.])
    ],,[[#include "postgresql/postgres.h"]])
fi

## Add other locations to check here.

if test "x$pg_ac_need_invalidoid" = xtrue ; then
  AC_MSG_ERROR([cannot find declaration for InvalidOid])
fi

CFLAGS="$saved_CFLAGS"
LDFLAGS="$saved_LDFLAGS"

##----------------------------------------------------------------------------
## Etc

GUILE_PG_STAMP="`date`"
AC_SUBST(GUILE_PG_STAMP)

AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(DIFF_PATH, diff)
AC_PATH_PROG(MD5SUM_PATH, md5sum)

## If we're using GCC, ask for aggressive warnings.
case "$GCC" in
  yes )
#   CFLAGS="$CFLAGS -Wall -Wpointer-arith -Wmissing-prototypes" ;;
    CFLAGS="$CFLAGS -Wall -Wmissing-prototypes" ;;
esac

top_builddir_absolute=`pwd`
AC_SUBST(top_builddir_absolute)

AC_CONFIG_FILES([
  Makefile
  scm/Makefile
  doc/Makefile
  scm/postgres.scm
  test/Makefile
  test/guile-pg-basic-tests.scm
  test/guile-pg-lo-tests.scm
])

AC_OUTPUT

dnl configure.in ends here
