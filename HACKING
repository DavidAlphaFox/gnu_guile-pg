Please read the GNU Coding Standards.  We try to conform to these.
If there are any violations of them then please let us know.

One exception is the provision of non-ANSI function prototypes, which
Guile doesn't do.  Since you can't build a working Guile without an ANSI
C compiler it's no great problem that you can't build Guile-PG either.

Quick start:

 $ CVSROOT=':pserver:anonymous@cvs.glug.org:/home/ttn/cvsroot'
 $ export CVSROOT
 $ cvs login			# type RET (empty password)
 $ cvs co guile-pg
 $ cd guile-pg
 $ sh -x autogen.sh

See autogen.sh comments for which tool versions are recommended to install on
your system (minimally -- probably later versions work, too).  The autogen.sh
script also creates file .last-release in the current directory, which you
can use with "cvs diff" like so:

 cvs diff -u -b -B -w -r`cat .last-release`

To be able to extract (and build) documentation automatically from the source
you need a Guile that installs "guile-tools twerp2texi", such as those in the
1.4.1.x series (http://www.glug.org/alt/).

Please add test cases to the tests in the test/ directory, and run 'make check'
to test them.  Use script "cov" to see what new tests need to be written.

The `dist' and `distcheck' targets are supremeley useful.  To use distcheck
though you need to make sure that the shared libguile is on the load path
because distcheck runs the tests.  If libguile.so is on the load path anyway
then this is no problem, but if it's not you can use the loader's load path
environment variable.  On Linux, SunOS etc you can say:

       LD_LIBRARY_PATH=/opt/guile/lib make distcheck

Of course the Postgres server must be running when you do this.
