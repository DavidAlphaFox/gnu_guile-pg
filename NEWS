NEWS for Guile-PG


- 0.21 | NOT YET RELEASED

  - Copyright clarification

	The original author of Guile-PG, Ian Grant, has confirmed that
	the copyright notices stating "Copyright (C) YEAR(S) Free
	Software Foundation, Inc" were incorrect.  The notices have
	been changed to use "Ian Grant" for years up through 2000, and
	"Thien-Thi Nguyen" for years afterwards.

  - Installation change: scheme wrappers eliminated

	The module (database postgres) used to be a scheme wrapper for
	compiled module (database postgres-sup).  Now it is the compiled
	module itself.

	On "make install" files $(GUILE_LIBSITE)/database/postgres-sup.*
	are unconditionally deleted.

  - Installation change: all modules installed under $(GUILE_LIBSITE)

	Both compiled (binary) and uncompiled (text) modules are now
	installed in the same place.  See README.

	On "make install" if files $(GUILE_SITE)/database/postgres*
	exist, they are deleted.  If the dir $(GUILE_SITE)/database is
	empty as a result, it is also deleted.

  - Proc removed: pg-oid-status

	The first mention of imminent removal of `pg-oid-status' was in
	its docstring, available since Guile-PG 0.13, 2002-12-24.  The
	following two constructs are equivalent and thus demonstrate how
	to migrate code using `pg-oid-status' to use `pg-oid-value':

	(let ((s (pg-oid-status RESULT)))
	  (and (not (string-null? s))
	       (string->number s)))
	===
	(pg-oid-value RESULT)

  - Proc removed: pg-guile-pg-version
  - Proc removed: pg-guile-pg-module-version
  - Proc removed: pg-guile-pg-module-config-stamp

	First mention for imminent removal of these procs occurred in
	the info node "Miscellaneous", available since Guile-PG 0.17,
	2004-02-02.  See `pg-guile-pg-loaded' for a more direct way to
	discern Guile-PG features than mapping time/version info.


- 0.20 | 2004-06-15

  - Bugfix: proc `defs-from-psql' now parses comma as space

	For example, if the column is specified as:

		amount numeric(9,2) not null

	then `defs-from-psql' would return (among other col defs):

		(amount numeric (9 2) "not null")

	Previously, `defs-from-psql' was not able to handle the comma.

  - Bugfix: configure script uses Guile's prefix (see README)

  - "make check" supports DEBUG=1 (see README)


- 0.19 | 2004-05-10

  - configure script checks c2x method

	If "guile-tools c2x" is available, use it.
	Otherwise, use "guile-snarf".


- 0.18 | 2004-03-22

  - Variables removed from module (database postgres)

	The following variables are obsolete; proc `pg-result-status'
	started returning a symbolic value starting with Guile-PG 0.08
	(2002-12-11).

	PGRES_EMPTY_QUERY
	PGRES_COMMAND_OK
	PGRES_TUPLES_OK
	PGRES_COPY_OUT
	PGRES_COPY_IN
	PGRES_BAD_RESPONSE
	PGRES_NONFATAL_ERROR
	PGRES_FATAL_ERROR

  - Procs deleted from (database postgres-table)

	The following procs are in module (database postgres-col-defs),
	but w/o the "def:" prefix, since Guile-PG 0.15 (2003-01-15).

	def:col-name
	def:type-name
	def:type-options

  - Bugfix: pg-lo-unlink returns #f only on error

	This proc used to consider some non-error status cases as erroneous,
	and return #f as a result.  Now the check is more precise.

  - Error output bugfix: Use ~S instead of %s

  - Build bugfix: pre-inst.merged-module-catalog conditionally built

	The "make" step now checks if prerequisite tools are available
	before attempting to create this file, and uses a fallback
	method if the tools are unavailable.

  - Limitation lifted: `pg-exec' query string size

	The query string sent to `pg-exec' used to be limited to 7999
	bytes; larger queries were silently truncated.  Furthermore,
	each `pg-exec' call used to perform a string copy whether it
	was needed or not.  Similarly, a 255-byte limit was silently
	enforced for `pg-connectdb', `pg-error-message', `pg-fnumber',
	`pg-putline', and `pg-set-client-encoding!'.

	These procedures have been changed to use arbitrary-length input
	strings in situ if possible, and only do a copy if necessary.

  - Conditional definitions now unconditional

	The following procedures used to be conditionally defined
	(compiled).  Now they are present unconditionally, although
	their return values are still influenced by the condition:

	Procedure          Conditional           Return value if
	                                      conditional is not met
        ============================================================
	pg-get-pass        HAVE_PQPASS                 #f
	pg-backend-pid     HAVE_PQBACKENDPID           -1
	pg-oid-value       HAVE_PQOIDVALUE             #f
	pg-binary-tuples   HAVE_PQBINARYTUPLES         #f
	pg-fmod            HAVE_PQFMOD                 -1

	The idiom for safely using these procs used to be:

	(and (defined? 'PROC)
	     (PROC ...))

	Now, `pg-guile-pg-loaded' returns a list of symbols which
	include the conditionals, sans "HAVE_" prefix, to check.  E.g.:

	(and (memq 'PQFMOD (pg-guile-pg-loaded))
	     (pg-fmod ...))

	Alternatively, you can use the procs without such a pre-check,
	and instead check the return value.

  - New (database postgres-meta) proc: defs-from-psql
  - New (database postgres-meta) proc: check-type/elaborate
  - New (database postgres-meta) proc: strictly-check-types/elaborate!

  - New (database postgres-table) proc: pgtable-worker

  - New (database postgres-types) converter: real

  - New (database postgres) procs

	See manual for details.

    - support for non-blocking queries

	(pg-send-query CONN QUERY) => bool
	(pg-consume-input CONN) => bool
	(pg-is-busy? CONN) => bool
	(pg-request-cancel CONN) => bool
	(pg-get-result CONN) => result

    - asynchronous version of `pg-getline'

	(pg-getlineasync CONN BUF [TICKLE]) => byte-count

    - miscellaneous

	(pg-conndefaults) => alist of alists

  - ChangeLog for subdir test/ split out

  - Support for builddir!=srcdir

	This means you can invoke the unpacked distribution's configure
	script from another directory, and the "make", "make check" and
	"make install" steps know how to cope.

  - Untested procs shown by "make check"

	There is a new test "coverage.sh" that displays the names of
	pg-* procs that are defined but not tested by the "make check"
	step.  This list must be empty for a 1.0 release.  To see full
	status (both tested/untested), change directory to test/ and
	invoke the script "cov".

	Note that coverage does not imply good coverage!


- 0.17 | 2004-02-02

  - Installation change: modules installed under site dirs

	The compiled module (database postgres-sup) is now installed in
	${GUILE_LIBSITE}/database, while the other non-compiled modules
	are installed in ${GUILE_SITE}/database.  Both site dirs are
	determined by the configure script, usually something like
	${libdir}/guile/site and ${datadir}/guile/site, respectively.

	Additionally, if the system supports it, "make install" updates
	each site dir's module catalog.

	See also "Removing Misguided Prior Installations" in README.

  - Distribution bugfix: .x files no longer included

	The truth is out there, but you really don't want it cluttering
	things, especially since it precludes build-time snarfing.

  - Bugfix: incorrect objectifiers selection bug in pgtable-manager

	For `tuples-result->object-alist' and `tuples-result->alists'
	sub-procs, the `objectifiers' passed to `result->object-alist'
	and `result->object-alists', respectively, were not qualified to
	match the selected columns.  Here is an example to demonstrate
	the bug:

	(define DEFS '((a int4) (b text)))
	(define M (pgtable-manager "ttn" "t42" DEFS))
	(define SHOW (M 'tuples-result->object-alist))
	(define SEL (M 'select))

	(SHOW (SEL '(b a) "limit 2"))
	=> ((b #f #f) (a "42" "19"))	; wrong

	Once corrected, we see the expected result:

	(SHOW (SEL '(b a) "limit 2"))
	=> ((b "nothing is real" "deadly") (a 42 19))

	The implementation introduces a restriction: If you intend to
	pass the result of SEL to either `tuples-result->object-alist'
	or `tuples-result->alists', the first arg to SEL cannot be a
	string, since there is no outspec-as-string parsing support.
	To ameliorate this restriction somewhat, `compile-outspec' is
	now exported (see below).

  - Error output bugfix: pg-fname, pg-ftype, pg-fsize, pg-fmod

	For an invalid field number argument, these procs used to
	display "Invalid field number %s".  They now display the
	field number instead of the literal string "%s".

  - Proc `pg-print' no longer limited to stdout

	It used to be that `pg-print' output could only be sent to
	stdout, ignoring the port returned by `current-output-port'.
	Now, output is now completely controllable from Scheme code
	using `with-output-to-port' (or `call-with-output-string',
	`call-with-output-file', `set-current-output-port', etc).

  - New (database postgres) procs
    - pg-set-notice-out!
    - pg-notifies
    - pg-client-encoding
    - pg-set-client-encoding!

	These are documented in the manual under "Database Connections".

  - New (database postgres-table) proc: `compile-outspec'

	This is documented in the manual under "Single-Table Abstraction".
	A continuation of the example above, using `compile-outspec':

	(define (CSHOW spec)
	  (SHOW (SEL (compile-outspec spec DEFS) "limit 2")))

	(CSHOW '((#f "label" "upper(b)") (int4 "bella" "11 * a")))
	=> ((label "NOTHING IS REAL" "DEADLY") (bella 462 209))

	(CSHOW '((int4 "label" "upper(b)") ((#t . b) "bella" "11 * a")))
	=> ((label #f #f) (bella "462" "209"))

	(CSHOW #t)
	=> ((a 42 19) (b "nothing is real" "deadly"))

	(CSHOW "*")
	error--> ERROR: bad select part: "*"
	         ABORT: (misc-error)

  - "make check" fails on test failure

	A bug was fixed in the "make check" flow whereby test failures
	were reported but in fact did not cause "make check" to fail.
	See README for info on how to clean up the db "make check" uses
	should this situation arise.

  - Info page title now "The (database postgres*) Modules"

	This reflects the evolution of Guile-PG beyond its single
	module origins into a collection of related modules.


- 0.16 | 2003-08-13

  - New (database postgres) proc: `pg-print'
  - New (database postgres) proc: `pg-make-print-options'

	These are documented in the manual.

  - "make check" now passes for PostgreSQL 7.3.3

	As of PostgreSQL 7.2, the output representation of arrays has
	changed to conditionally use double-quotes (only when "needed").
	Here is a short table using type `text[]':

	                   needed               unneeded
        prior to 7.2       {",a","{}","c'c"}    {"d","e","f"}
        7.2 and later      {",a","{}","c'c"}    {d,e,f}

	Although the module (database postgres-types) has been able to
	handle these cases all along, one of the "make check" tests was
	previously failing because it checked the representation before
	the conversion to scheme objects.  This has now been corrected
	and verified to work against a stock-install PostgreSQL 7.3.3.

  - Script to share the good news publicized

	The README now mentions the test/show-platform script.


- 0.15 | 2003-01-15

  - New (database postgres) proc: `pg-connection?'

  - Extension to (database postgres-table) proc: `pgtable-manager'

	The first arg of this proc used to be a string naming the
	database to use.  Now it can additionally be an empty string,
	a string of space-separated "var=val" pairs, or an already
	existing connection object (satisfying `pg-connection?').

  - New (database postgres-meta) proc: `infer-defs'

  - New module: (database postgres-col-defs)
  - New module: (database postgres-resx)

	These provide procedures to handle column definitions and to
	transform result objects in various ways, respectively.

  - WARNING: column definition procs have moved

	The following procedures continue to be exported from (database
	postgres-table), but are now in (database postgres-col-defs):

                bye-bye                 hello
                -------                 -----
                def:col-name            column-name
                def:type-name           type-name
                def:type-options        type-options

	Sometime before 1.0 release they will no longer be exported from
	the (database postgres-table) module.


- 0.14 | 2002-12-27

  - Configuration bugfix: twerp2texi invocation conditionalized

	The configure script, when --enable-maintainer-mode, now checks
	if "guile-tools twerp2texi" is available and displays a warning
	if not.

  - New (database postgres) proc: `pg-result?'

  - New (database postgres-types) built-in type converters

	name
	aclitem
	aclitem[]

  - New experimental module: (database postgres-meta)

	This module provides some table introspection capabilities,
	currently exported as procedure `describe-table!', q.v.
	Interface design ideas welcome (post to mailing lists).


- 0.13 | 2002-12-24

  - `terminating' slack

	The heuristic fallback when lacking `scm_terminating' has been
	replaced w/ a configure.in check for `terminating' in libguile.
	If neither is available, on lob flush error, guile-pg writes to
	stderr unconditionally.  This is safer than unconditionally
	calling scm_syserror (the previous approach), which may crash
	guile in some circumstances.

  - New (database postgres-types) proc: oid-type-name-cache CONN [FRESH?]

	Documented in the manual, which now sports full extracted
	docstrings (cheesy Commentary snapshots removed, too).


- 0.12 | 2002-12-21

  - PATH/configure where PATH != "./" supported

	This is known as "vpath build" or "srcdir!=builddir build".
	Previously, "make check" failed for such situations due to not
	being able to find test/testing.scm.

  - New module: (database postgres-types)
  - New module: (database postgres-table)

	These scheme modules are documented in their respective chapters
	(for now, see code for detailed documentation on each proc).


- 0.11 | 2002-12-17

  - `InvalidOid' declaration slack

	This variable is expected to be declared by libpq-fe.h (or one
	of its sub-#include files).  PostgreSQL 7.0.3, in particular,
	fails to do this, but provides `InvalidOid' in another header.
	Configuration now attempts to include the appropriate additional
	header.

  - `scm_terminating' declaration slack

	This variable is expected to be declared by libguile.h (or one
	of its sub-#include files).  Some versions of Guile provide
	"terminating" but not "scm_terminating".  Configuration now
	detects lack of scm_terminating and arranges (heuristically) for
	the latter to be an alias of the former.

  - New file: THANKS

	A good place to find fellow guile-pg users!


- 0.10 | 2002-12-14

  - Bugfix: pg-lo-tell

	This procedure, which does the equivalent of "seek 0 SEEK_CUR",
	was not taking into account guile's port buffering conventions,
	resulting in an incorrect value being returned (the position
	indicated by the end of the port's read-buffer instead of the
	actual position).  For example:

	  (pg-lo-tell port)	=> 0	; ok
	  (pg-lo-read 4 2 port)         ; read two objects of four bytes
          (pg-lo-tell port)     => 100	; wrong, should be 8

	Test coverage for pg-lo-tell is still rather low.  Additional
	interesting test cases are always welcome.


- 0.09 | 2002-12-12

	Docs spiffing: Info page organization now flattened.

	As a convenience for existing code, the vars:
		PGRES_EMPTY_QUERY
		PGRES_COMMAND_OK
		PGRES_TUPLES_OK
		PGRES_COPY_OUT
		PGRES_COPY_IN
		PGRES_BAD_RESPONSE
		PGRES_NONFATAL_ERROR
		PGRES_FATAL_ERROR
	are now added back, but w/ symbolic values rather than
	numerical.  However, this is temporary; these vars will go away
	(and stay gone) as 1.0 release nears.  New code should use
	symbols directly (see manual for examples).


- 0.08 | 2002-12-11

	Maintenance for guile-pg has passed from Ian Grant (original
	author) to Thien-Thi Nguyen.  Thanks Ian!

	This release differs from 0.07 in that `pg-result-status' values
	are symbolic (rather than numerical), the guile-pg integrated
	interpreter is no longer included (neither built nor installed),
	the "rcsid"-related procs/vars are no longer included, and "make
	check" now works pre-install.

	See http://www.glug.org/alt/ for latest anoncvs access info.


- 0.07 | 2000-07-08

	Released Version 0.07.  The primnary reason for this release is
	to fix a bug where 0.06 wouldn't build with the newly-released
	guile-1.4 Also added pg-oid-value function.


- 0.06 | 2000-06-02

	Released Version 0.06.  Builds with guile-1.3.4 and pre-release
	guile-1.4.  Function names changed from pg:xxx to the more
	schemely pg-xxx.  Minor documentation and bug fixes.


- 0.05 | 1999-06-03

	Second alpha release. Version 0.05


- 0.04 | 1999-12-24

	First alpha release.  Called guile-pg-0.04.


- 1998-12-03

	Initial build


- etc

	Local Variables:
	mode: outline
	outline-regexp: "\\([ ][ ]\\)*- "
	fill-column: 72
	fill-prefix: "\t"
	End:
